{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1DM9t_fUtPw7vtSAgZNf7eTvT56_wtPZ8","timestamp":1724493521668},{"file_id":"14GZPkyFVGW3pdO0apdLHhmcvmGp6Eq_j","timestamp":1724073121422}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","source":["#blackfridaysales_eda"],"metadata":{"id":"v5SvLt5_SG4_","executionInfo":{"status":"ok","timestamp":1724506539416,"user_tz":-330,"elapsed":574,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":334,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"mAH_XSuwSPoZ"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline"],"metadata":{"id":"QDs5FY9ySLKM","executionInfo":{"status":"ok","timestamp":1724506540281,"user_tz":-330,"elapsed":5,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":335,"outputs":[]},{"cell_type":"markdown","source":["Problem Statement\n","A retail company “ABC Private Limited” wants to understand the customer purchase behaviour (specifically, purchase amount) against various products of different categories. They have shared purchase summary of various customers for selected high volume products from last month. The data set also contains customer demographics (age, gender, marital status, city_type, stay_in_current_city), product details (product_id and product category) and Total purchase_amount from last month.\n","\n","Now, they want to build a model to predict the purchase amount of customer against various products which will help them to create personalized offer for customers against different products."],"metadata":{"id":"KNSCsdbkSj3X"}},{"cell_type":"code","source":["#importing the dataset\n","df_train=pd.read_csv('train.csv')\n","df_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"N4EfcRYf07FS","executionInfo":{"status":"ok","timestamp":1724506540898,"user_tz":-330,"elapsed":621,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"fa26a94f-ae58-45bc-bd5a-d5b8ad40709b"},"execution_count":336,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID Product_ID Gender   Age  Occupation City_Category  \\\n","0  1000001  P00069042      F  0-17          10             A   \n","1  1000001  P00248942      F  0-17          10             A   \n","2  1000001  P00087842      F  0-17          10             A   \n","3  1000001  P00085442      F  0-17          10             A   \n","4  1000002  P00285442      M   55+          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase  \n","0                 NaN                 NaN      8370  \n","1                 6.0                14.0     15200  \n","2                 NaN                 NaN      1422  \n","3                14.0                 NaN      1057  \n","4                 NaN                 NaN      7969  "],"text/html":["\n","  <div id=\"df-96ac08dd-d4d3-44d9-9cb0-2298fd7d8f6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000001</td>\n","      <td>P00069042</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000001</td>\n","      <td>P00248942</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000001</td>\n","      <td>P00087842</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000001</td>\n","      <td>P00085442</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000002</td>\n","      <td>P00285442</td>\n","      <td>M</td>\n","      <td>55+</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96ac08dd-d4d3-44d9-9cb0-2298fd7d8f6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96ac08dd-d4d3-44d9-9cb0-2298fd7d8f6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96ac08dd-d4d3-44d9-9cb0-2298fd7d8f6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab99e983-45be-43ab-be55-8fe82593e295\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab99e983-45be-43ab-be55-8fe82593e295')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab99e983-45be-43ab-be55-8fe82593e295 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_train"}},"metadata":{},"execution_count":336}]},{"cell_type":"code","source":["##  import the test data\n","df_test=pd.read_csv('test.csv')\n","df_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"oA0tQX0w0-RO","executionInfo":{"status":"ok","timestamp":1724506541718,"user_tz":-330,"elapsed":824,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"8330fa79-fa76-4b80-9167-de2339412f58"},"execution_count":337,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID Product_ID Gender    Age  Occupation City_Category  \\\n","0  1000004  P00128942      M  46-50           7             B   \n","1  1000009  P00113442      M  26-35          17             C   \n","2  1000010  P00288442      F  36-45           1             B   \n","3  1000010  P00145342      F  36-45           1             B   \n","4  1000011  P00053842      F  26-35           1             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               1                   1   \n","1                          0               0                   3   \n","2                         4+               1                   5   \n","3                         4+               1                   4   \n","4                          1               0                   4   \n","\n","   Product_Category_2  Product_Category_3  \n","0                11.0                 NaN  \n","1                 5.0                 NaN  \n","2                14.0                 NaN  \n","3                 9.0                 NaN  \n","4                 5.0                12.0  "],"text/html":["\n","  <div id=\"df-4d8f59ea-0d82-460a-a356-b6c99a69920e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000004</td>\n","      <td>P00128942</td>\n","      <td>M</td>\n","      <td>46-50</td>\n","      <td>7</td>\n","      <td>B</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000009</td>\n","      <td>P00113442</td>\n","      <td>M</td>\n","      <td>26-35</td>\n","      <td>17</td>\n","      <td>C</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000010</td>\n","      <td>P00288442</td>\n","      <td>F</td>\n","      <td>36-45</td>\n","      <td>1</td>\n","      <td>B</td>\n","      <td>4+</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000010</td>\n","      <td>P00145342</td>\n","      <td>F</td>\n","      <td>36-45</td>\n","      <td>1</td>\n","      <td>B</td>\n","      <td>4+</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>9.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000011</td>\n","      <td>P00053842</td>\n","      <td>F</td>\n","      <td>26-35</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>12.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d8f59ea-0d82-460a-a356-b6c99a69920e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4d8f59ea-0d82-460a-a356-b6c99a69920e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4d8f59ea-0d82-460a-a356-b6c99a69920e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9b0c381c-4b97-4263-9eee-578e58008e7e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b0c381c-4b97-4263-9eee-578e58008e7e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9b0c381c-4b97-4263-9eee-578e58008e7e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_test"}},"metadata":{},"execution_count":337}]},{"cell_type":"code","source":["##MErge both train and test data\n","#df=df_train.append(df_test)\n","#df.head()"],"metadata":{"id":"fcq-r2hf1IBF","executionInfo":{"status":"ok","timestamp":1724506541718,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":338,"outputs":[]},{"cell_type":"code","source":["##MErge both train and test data\n","df = pd.concat([df_train, df_test], ignore_index=True)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"xhZfW5izMmtH","executionInfo":{"status":"ok","timestamp":1724506541718,"user_tz":-330,"elapsed":19,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"8656e8b2-203f-4cc5-c4f8-af16a475740f"},"execution_count":339,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID Product_ID Gender   Age  Occupation City_Category  \\\n","0  1000001  P00069042      F  0-17          10             A   \n","1  1000001  P00248942      F  0-17          10             A   \n","2  1000001  P00087842      F  0-17          10             A   \n","3  1000001  P00085442      F  0-17          10             A   \n","4  1000002  P00285442      M   55+          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase  \n","0                 NaN                 NaN    8370.0  \n","1                 6.0                14.0   15200.0  \n","2                 NaN                 NaN    1422.0  \n","3                14.0                 NaN    1057.0  \n","4                 NaN                 NaN    7969.0  "],"text/html":["\n","  <div id=\"df-b145b406-0910-4f9c-a00d-7cd7b98286d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000001</td>\n","      <td>P00069042</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000001</td>\n","      <td>P00248942</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000001</td>\n","      <td>P00087842</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000001</td>\n","      <td>P00085442</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000002</td>\n","      <td>P00285442</td>\n","      <td>M</td>\n","      <td>55+</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b145b406-0910-4f9c-a00d-7cd7b98286d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b145b406-0910-4f9c-a00d-7cd7b98286d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b145b406-0910-4f9c-a00d-7cd7b98286d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b055a710-d136-458b-8759-27e2be392e35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b055a710-d136-458b-8759-27e2be392e35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b055a710-d136-458b-8759-27e2be392e35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":339}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1vNj_L0FMsYt","executionInfo":{"status":"ok","timestamp":1724506541718,"user_tz":-330,"elapsed":18,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"24c0fe63-1b33-45f6-91c2-096da3679330"},"execution_count":340,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 783667 entries, 0 to 783666\n","Data columns (total 12 columns):\n"," #   Column                      Non-Null Count   Dtype  \n","---  ------                      --------------   -----  \n"," 0   User_ID                     783667 non-null  int64  \n"," 1   Product_ID                  783667 non-null  object \n"," 2   Gender                      783667 non-null  object \n"," 3   Age                         783667 non-null  object \n"," 4   Occupation                  783667 non-null  int64  \n"," 5   City_Category               783667 non-null  object \n"," 6   Stay_In_Current_City_Years  783667 non-null  object \n"," 7   Marital_Status              783667 non-null  int64  \n"," 8   Product_Category_1          783667 non-null  int64  \n"," 9   Product_Category_2          537685 non-null  float64\n"," 10  Product_Category_3          237858 non-null  float64\n"," 11  Purchase                    550068 non-null  float64\n","dtypes: float64(3), int64(4), object(5)\n","memory usage: 71.7+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"eZAIHpH9Mu1M","executionInfo":{"status":"ok","timestamp":1724506541719,"user_tz":-330,"elapsed":15,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"815d717f-5744-4362-b3b3-3fa45063cbeb"},"execution_count":341,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User_ID     Occupation  Marital_Status  Product_Category_1  \\\n","count  7.836670e+05  783667.000000   783667.000000       783667.000000   \n","mean   1.003029e+06       8.079300        0.409777            5.366196   \n","std    1.727267e+03       6.522206        0.491793            3.878160   \n","min    1.000001e+06       0.000000        0.000000            1.000000   \n","25%    1.001519e+06       2.000000        0.000000            1.000000   \n","50%    1.003075e+06       7.000000        0.000000            5.000000   \n","75%    1.004478e+06      14.000000        1.000000            8.000000   \n","max    1.006040e+06      20.000000        1.000000           20.000000   \n","\n","       Product_Category_2  Product_Category_3       Purchase  \n","count       537685.000000       237858.000000  550068.000000  \n","mean             9.844506           12.668605    9263.968713  \n","std              5.089093            4.125510    5023.065394  \n","min              2.000000            3.000000      12.000000  \n","25%              5.000000            9.000000    5823.000000  \n","50%              9.000000           14.000000    8047.000000  \n","75%             15.000000           16.000000   12054.000000  \n","max             18.000000           18.000000   23961.000000  "],"text/html":["\n","  <div id=\"df-87f5c9c6-b5e4-4087-ae58-fd2c1b79d2a1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Occupation</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7.836670e+05</td>\n","      <td>783667.000000</td>\n","      <td>783667.000000</td>\n","      <td>783667.000000</td>\n","      <td>537685.000000</td>\n","      <td>237858.000000</td>\n","      <td>550068.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.003029e+06</td>\n","      <td>8.079300</td>\n","      <td>0.409777</td>\n","      <td>5.366196</td>\n","      <td>9.844506</td>\n","      <td>12.668605</td>\n","      <td>9263.968713</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.727267e+03</td>\n","      <td>6.522206</td>\n","      <td>0.491793</td>\n","      <td>3.878160</td>\n","      <td>5.089093</td>\n","      <td>4.125510</td>\n","      <td>5023.065394</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000001e+06</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.001519e+06</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>5823.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.003075e+06</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>14.000000</td>\n","      <td>8047.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.004478e+06</td>\n","      <td>14.000000</td>\n","      <td>1.000000</td>\n","      <td>8.000000</td>\n","      <td>15.000000</td>\n","      <td>16.000000</td>\n","      <td>12054.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.006040e+06</td>\n","      <td>20.000000</td>\n","      <td>1.000000</td>\n","      <td>20.000000</td>\n","      <td>18.000000</td>\n","      <td>18.000000</td>\n","      <td>23961.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87f5c9c6-b5e4-4087-ae58-fd2c1b79d2a1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87f5c9c6-b5e4-4087-ae58-fd2c1b79d2a1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87f5c9c6-b5e4-4087-ae58-fd2c1b79d2a1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90435c70-740f-412d-82f8-60cd57ba62ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90435c70-740f-412d-82f8-60cd57ba62ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90435c70-740f-412d-82f8-60cd57ba62ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 351422.6605573167,\n        \"min\": 1727.2666677261032,\n        \"max\": 1006040.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1003028.9957532983,\n          1003075.0,\n          783667.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 277065.2157035522,\n        \"min\": 0.0,\n        \"max\": 783667.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.0793002640152,\n          7.0,\n          783667.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 277067.9783949445,\n        \"min\": 0.0,\n        \"max\": 783667.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.40977736717253627,\n          1.0,\n          0.49179282747098113\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category_1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 277065.89033439,\n        \"min\": 1.0,\n        \"max\": 783667.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          783667.0,\n          5.366196356360546,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category_2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 190097.12576115245,\n        \"min\": 2.0,\n        \"max\": 537685.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.844505612021909,\n          9.0,\n          537685.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category_3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 84091.62386196422,\n        \"min\": 3.0,\n        \"max\": 237858.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.668604797820548,\n          14.0,\n          237858.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191363.80903912007,\n        \"min\": 12.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9263.968712959126,\n          8047.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":341}]},{"cell_type":"code","source":["df.drop(['User_ID'],axis=1,inplace=True) #nouse_column"],"metadata":{"id":"D7evlBmIMykk","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":928,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":342,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"VCZ9xoFrM032","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":28,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"8a3acd19-ecbc-4260-9192-2811140a7a51"},"execution_count":343,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID Gender   Age  Occupation City_Category  \\\n","0  P00069042      F  0-17          10             A   \n","1  P00248942      F  0-17          10             A   \n","2  P00087842      F  0-17          10             A   \n","3  P00085442      F  0-17          10             A   \n","4  P00285442      M   55+          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase  \n","0                 NaN                 NaN    8370.0  \n","1                 6.0                14.0   15200.0  \n","2                 NaN                 NaN    1422.0  \n","3                14.0                 NaN    1057.0  \n","4                 NaN                 NaN    7969.0  "],"text/html":["\n","  <div id=\"df-f9601a44-1b3f-4b38-ac38-260e1d31d1ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>M</td>\n","      <td>55+</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9601a44-1b3f-4b38-ac38-260e1d31d1ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9601a44-1b3f-4b38-ac38-260e1d31d1ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9601a44-1b3f-4b38-ac38-260e1d31d1ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85441d94-0770-42ad-8016-f78d43e71fe5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85441d94-0770-42ad-8016-f78d43e71fe5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85441d94-0770-42ad-8016-f78d43e71fe5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":343}]},{"cell_type":"code","source":["#categorical\n","\n","#df['Gender']=pd.get_dummies(df['Gender'],drop_first=1)"],"metadata":{"id":"RvA8Djs0M3cU","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":27,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":344,"outputs":[]},{"cell_type":"code","source":["##HAndling categorical feature Gender\n","df['Gender']=df['Gender'].map({'F':0,'M':1})\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"AlkHJ75dM50G","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":26,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"c02562f6-2ee6-4596-d982-a9490858d7f2"},"execution_count":345,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender   Age  Occupation City_Category  \\\n","0  P00069042       0  0-17          10             A   \n","1  P00248942       0  0-17          10             A   \n","2  P00087842       0  0-17          10             A   \n","3  P00085442       0  0-17          10             A   \n","4  P00285442       1   55+          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase  \n","0                 NaN                 NaN    8370.0  \n","1                 6.0                14.0   15200.0  \n","2                 NaN                 NaN    1422.0  \n","3                14.0                 NaN    1057.0  \n","4                 NaN                 NaN    7969.0  "],"text/html":["\n","  <div id=\"df-cd6c3b32-b594-47d0-8033-787ca2c504d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>55+</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd6c3b32-b594-47d0-8033-787ca2c504d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd6c3b32-b594-47d0-8033-787ca2c504d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd6c3b32-b594-47d0-8033-787ca2c504d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3c4c7f4-c367-4c74-a659-009ac7ae7496\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3c4c7f4-c367-4c74-a659-009ac7ae7496')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3c4c7f4-c367-4c74-a659-009ac7ae7496 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":345}]},{"cell_type":"code","source":["## Handle categorical feature Age\n","df['Age'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QJHgee_YM79U","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":25,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"34c2b710-a10c-407d-903b-0d436c00d9e8"},"execution_count":346,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['0-17', '55+', '26-35', '46-50', '51-55', '36-45', '18-25'],\n","      dtype=object)"]},"metadata":{},"execution_count":346}]},{"cell_type":"code","source":["#pd.get_dummies(df['Age'],drop_first=True)\n","df['Age']=df['Age'].map({'0-17':1,'18-25':2,'26-35':3,'36-45':4,'46-50':5,'51-55':6,'55+':7})\n"],"metadata":{"id":"WFEPNMdlM-yA","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":21,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":347,"outputs":[]},{"cell_type":"code","source":["##second technqiue\n","#from sklearn import preprocessing\n","\n","# label_encoder object knows how to understand word labels.\n","#label_encoder = preprocessing.LabelEncoder()\n","\n","# Encode labels in column 'species'.\n","#df['Age']= label_encoder.fit_transform(df['Age'])\n","\n","#df['Age'].unique()"],"metadata":{"id":"4qCS0P19NC2l","executionInfo":{"status":"ok","timestamp":1724506542633,"user_tz":-330,"elapsed":21,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":348,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"pBuTCZOcNEjV","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":22,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"e2619681-8704-4c7a-c617-1e3b151cf94a"},"execution_count":349,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation City_Category  \\\n","0  P00069042       0    1          10             A   \n","1  P00248942       0    1          10             A   \n","2  P00087842       0    1          10             A   \n","3  P00085442       0    1          10             A   \n","4  P00285442       1    7          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase  \n","0                 NaN                 NaN    8370.0  \n","1                 6.0                14.0   15200.0  \n","2                 NaN                 NaN    1422.0  \n","3                14.0                 NaN    1057.0  \n","4                 NaN                 NaN    7969.0  "],"text/html":["\n","  <div id=\"df-de2da3ab-b828-4771-b686-669aeeb49535\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de2da3ab-b828-4771-b686-669aeeb49535')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de2da3ab-b828-4771-b686-669aeeb49535 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de2da3ab-b828-4771-b686-669aeeb49535');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b8111152-6b58-4d53-ab01-f06c6a2be72c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8111152-6b58-4d53-ab01-f06c6a2be72c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b8111152-6b58-4d53-ab01-f06c6a2be72c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":349}]},{"cell_type":"code","source":["##fixing categorical City_categort\n","df_city=pd.get_dummies(df['City_Category'],drop_first=True)"],"metadata":{"id":"EiEaT6HrNGTT","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":350,"outputs":[]},{"cell_type":"code","source":["df_city.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Q21GMa54NIa8","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"c9432128-bd57-4f05-bdb1-199f430df818"},"execution_count":351,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       B      C\n","0  False  False\n","1  False  False\n","2  False  False\n","3  False  False\n","4  False   True"],"text/html":["\n","  <div id=\"df-4b68b233-df86-4bd3-a84b-f6c10f3f573c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b68b233-df86-4bd3-a84b-f6c10f3f573c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b68b233-df86-4bd3-a84b-f6c10f3f573c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b68b233-df86-4bd3-a84b-f6c10f3f573c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2cb836dd-7755-43c6-af96-5e6ae32b8331\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2cb836dd-7755-43c6-af96-5e6ae32b8331')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2cb836dd-7755-43c6-af96-5e6ae32b8331 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_city"}},"metadata":{},"execution_count":351}]},{"cell_type":"code","source":["df=pd.concat([df,df_city],axis=1)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"7rge1Pg6NKP3","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":19,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"028dec29-5cf7-401e-8d3c-a3f16aabd8c0"},"execution_count":352,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation City_Category  \\\n","0  P00069042       0    1          10             A   \n","1  P00248942       0    1          10             A   \n","2  P00087842       0    1          10             A   \n","3  P00085442       0    1          10             A   \n","4  P00285442       1    7          16             C   \n","\n","  Stay_In_Current_City_Years  Marital_Status  Product_Category_1  \\\n","0                          2               0                   3   \n","1                          2               0                   1   \n","2                          2               0                  12   \n","3                          2               0                  12   \n","4                         4+               0                   8   \n","\n","   Product_Category_2  Product_Category_3  Purchase      B      C  \n","0                 NaN                 NaN    8370.0  False  False  \n","1                 6.0                14.0   15200.0  False  False  \n","2                 NaN                 NaN    1422.0  False  False  \n","3                14.0                 NaN    1057.0  False  False  \n","4                 NaN                 NaN    7969.0  False   True  "],"text/html":["\n","  <div id=\"df-0f9cad98-9be1-4db1-ace6-82881ca89066\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f9cad98-9be1-4db1-ace6-82881ca89066')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f9cad98-9be1-4db1-ace6-82881ca89066 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f9cad98-9be1-4db1-ace6-82881ca89066');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d3b255b-b243-4b5b-afa8-e27d41669150\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d3b255b-b243-4b5b-afa8-e27d41669150')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d3b255b-b243-4b5b-afa8-e27d41669150 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":352}]},{"cell_type":"code","source":["##drop City Category Feature #dont req\n","\n","df.drop('City_Category',axis=1,inplace=True)"],"metadata":{"id":"rCw4CygdNMM1","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":18,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":353,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"TUB9iwk4NUdf","executionInfo":{"status":"ok","timestamp":1724506542634,"user_tz":-330,"elapsed":17,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"2751c2b9-149d-47e4-edf9-2f0a96d4009c"},"execution_count":354,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation Stay_In_Current_City_Years  \\\n","0  P00069042       0    1          10                          2   \n","1  P00248942       0    1          10                          2   \n","2  P00087842       0    1          10                          2   \n","3  P00085442       0    1          10                          2   \n","4  P00285442       1    7          16                         4+   \n","\n","   Marital_Status  Product_Category_1  Product_Category_2  Product_Category_3  \\\n","0               0                   3                 NaN                 NaN   \n","1               0                   1                 6.0                14.0   \n","2               0                  12                 NaN                 NaN   \n","3               0                  12                14.0                 NaN   \n","4               0                   8                 NaN                 NaN   \n","\n","   Purchase      B      C  \n","0    8370.0  False  False  \n","1   15200.0  False  False  \n","2    1422.0  False  False  \n","3    1057.0  False  False  \n","4    7969.0  False   True  "],"text/html":["\n","  <div id=\"df-55c52088-c1e0-43c2-bbff-4d4b1b5b1365\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1422.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7969.0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55c52088-c1e0-43c2-bbff-4d4b1b5b1365')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-55c52088-c1e0-43c2-bbff-4d4b1b5b1365 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-55c52088-c1e0-43c2-bbff-4d4b1b5b1365');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-740560c6-fb8e-4290-a59a-9f457b7beda2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-740560c6-fb8e-4290-a59a-9f457b7beda2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-740560c6-fb8e-4290-a59a-9f457b7beda2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":354}]},{"cell_type":"code","source":["## Missing Values\n","\n","\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"TAES3XaSNWEd","executionInfo":{"status":"ok","timestamp":1724506543311,"user_tz":-330,"elapsed":693,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"d6ff7c1f-8b58-47d5-dafe-b59a249e0f04"},"execution_count":355,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product_ID                         0\n","Gender                             0\n","Age                                0\n","Occupation                         0\n","Stay_In_Current_City_Years         0\n","Marital_Status                     0\n","Product_Category_1                 0\n","Product_Category_2            245982\n","Product_Category_3            545809\n","Purchase                      233599\n","B                                  0\n","C                                  0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Product_ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Occupation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Stay_In_Current_City_Years</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Marital_Status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Product_Category_1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Product_Category_2</th>\n","      <td>245982</td>\n","    </tr>\n","    <tr>\n","      <th>Product_Category_3</th>\n","      <td>545809</td>\n","    </tr>\n","    <tr>\n","      <th>Purchase</th>\n","      <td>233599</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":355}]},{"cell_type":"code","source":["## Focus on replacing missing values\n","df['Product_Category_2'].unique()\n","\n","#discrete feature--better way to replace missing values--replace with mode"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K3_9cW84NY1k","executionInfo":{"status":"ok","timestamp":1724506543312,"user_tz":-330,"elapsed":35,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"6e6e9d66-1d21-4c4d-afd0-32c7be63d4b2"},"execution_count":356,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan,  6., 14.,  2.,  8., 15., 16., 11.,  5.,  3.,  4., 12.,  9.,\n","       10., 17., 13.,  7., 18.])"]},"metadata":{},"execution_count":356}]},{"cell_type":"code","source":["df['Product_Category_2'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":648},"id":"YbNusxIONaif","executionInfo":{"status":"ok","timestamp":1724506543312,"user_tz":-330,"elapsed":30,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"8393bd23-969d-4b06-990e-f15ef161190d"},"execution_count":357,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product_Category_2\n","8.0     91317\n","14.0    78834\n","2.0     70498\n","16.0    61687\n","15.0    54114\n","5.0     37165\n","4.0     36705\n","6.0     23575\n","11.0    20230\n","17.0    19104\n","13.0    15054\n","9.0      8177\n","12.0     7801\n","10.0     4420\n","3.0      4123\n","18.0     4027\n","7.0       854\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Product_Category_2</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8.0</th>\n","      <td>91317</td>\n","    </tr>\n","    <tr>\n","      <th>14.0</th>\n","      <td>78834</td>\n","    </tr>\n","    <tr>\n","      <th>2.0</th>\n","      <td>70498</td>\n","    </tr>\n","    <tr>\n","      <th>16.0</th>\n","      <td>61687</td>\n","    </tr>\n","    <tr>\n","      <th>15.0</th>\n","      <td>54114</td>\n","    </tr>\n","    <tr>\n","      <th>5.0</th>\n","      <td>37165</td>\n","    </tr>\n","    <tr>\n","      <th>4.0</th>\n","      <td>36705</td>\n","    </tr>\n","    <tr>\n","      <th>6.0</th>\n","      <td>23575</td>\n","    </tr>\n","    <tr>\n","      <th>11.0</th>\n","      <td>20230</td>\n","    </tr>\n","    <tr>\n","      <th>17.0</th>\n","      <td>19104</td>\n","    </tr>\n","    <tr>\n","      <th>13.0</th>\n","      <td>15054</td>\n","    </tr>\n","    <tr>\n","      <th>9.0</th>\n","      <td>8177</td>\n","    </tr>\n","    <tr>\n","      <th>12.0</th>\n","      <td>7801</td>\n","    </tr>\n","    <tr>\n","      <th>10.0</th>\n","      <td>4420</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>4123</td>\n","    </tr>\n","    <tr>\n","      <th>18.0</th>\n","      <td>4027</td>\n","    </tr>\n","    <tr>\n","      <th>7.0</th>\n","      <td>854</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":357}]},{"cell_type":"code","source":["df['Product_Category_2'].mode()[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zoPGw69dNnLN","executionInfo":{"status":"ok","timestamp":1724506543312,"user_tz":-330,"elapsed":29,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"41e51963-abcb-4285-cbac-57e0bfc8b97d"},"execution_count":358,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8.0"]},"metadata":{},"execution_count":358}]},{"cell_type":"code","source":["## Replace the missing values with mode\n","\n","df['Product_Category_2']=df['Product_Category_2'].fillna(df['Product_Category_2'].mode()[0])"],"metadata":{"id":"KF6KNmaJNpHc","executionInfo":{"status":"ok","timestamp":1724506543313,"user_tz":-330,"elapsed":28,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":359,"outputs":[]},{"cell_type":"code","source":["df['Product_Category_2'].isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LcZuKmdKNq2V","executionInfo":{"status":"ok","timestamp":1724506543313,"user_tz":-330,"elapsed":28,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"1921a629-eaa5-4956-8ddd-ce98aa9c2a2e"},"execution_count":360,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":360}]},{"cell_type":"code","source":["\n","## Product_category 3 replace missing values\n","\n","df['Product_Category_3'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJ31e-PdNtL9","executionInfo":{"status":"ok","timestamp":1724506543313,"user_tz":-330,"elapsed":26,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"41b27255-6785-4e1f-f4ac-9c0e0202d2ad"},"execution_count":361,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan, 14., 17.,  5.,  4., 16., 15.,  8.,  9., 13.,  6., 12.,  3.,\n","       18., 11., 10.])"]},"metadata":{},"execution_count":361}]},{"cell_type":"code","source":["df['Product_Category_3'].value_counts()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"id":"Lxt_C5YWNu9N","executionInfo":{"status":"ok","timestamp":1724506543313,"user_tz":-330,"elapsed":24,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"85c99ce6-6b23-4d9e-a4c9-439a76b15691"},"execution_count":362,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product_Category_3\n","16.0    46469\n","15.0    39968\n","14.0    26283\n","17.0    23818\n","5.0     23799\n","8.0     17861\n","9.0     16532\n","12.0    13115\n","13.0     7849\n","6.0      6888\n","18.0     6621\n","4.0      2691\n","11.0     2585\n","10.0     2501\n","3.0       878\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Product_Category_3</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16.0</th>\n","      <td>46469</td>\n","    </tr>\n","    <tr>\n","      <th>15.0</th>\n","      <td>39968</td>\n","    </tr>\n","    <tr>\n","      <th>14.0</th>\n","      <td>26283</td>\n","    </tr>\n","    <tr>\n","      <th>17.0</th>\n","      <td>23818</td>\n","    </tr>\n","    <tr>\n","      <th>5.0</th>\n","      <td>23799</td>\n","    </tr>\n","    <tr>\n","      <th>8.0</th>\n","      <td>17861</td>\n","    </tr>\n","    <tr>\n","      <th>9.0</th>\n","      <td>16532</td>\n","    </tr>\n","    <tr>\n","      <th>12.0</th>\n","      <td>13115</td>\n","    </tr>\n","    <tr>\n","      <th>13.0</th>\n","      <td>7849</td>\n","    </tr>\n","    <tr>\n","      <th>6.0</th>\n","      <td>6888</td>\n","    </tr>\n","    <tr>\n","      <th>18.0</th>\n","      <td>6621</td>\n","    </tr>\n","    <tr>\n","      <th>4.0</th>\n","      <td>2691</td>\n","    </tr>\n","    <tr>\n","      <th>11.0</th>\n","      <td>2585</td>\n","    </tr>\n","    <tr>\n","      <th>10.0</th>\n","      <td>2501</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>878</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":362}]},{"cell_type":"code","source":["## Replace the missing values with mode\n","\n","df['Product_Category_3']=df['Product_Category_3'].fillna(df['Product_Category_3'].mode()[0])"],"metadata":{"id":"BD14RSasNwxv","executionInfo":{"status":"ok","timestamp":1724506543313,"user_tz":-330,"elapsed":23,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":363,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"PVYa8O4MNywF","executionInfo":{"status":"ok","timestamp":1724506543314,"user_tz":-330,"elapsed":23,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"ec2b5755-803d-4517-9655-a6d68c4ac5dd"},"execution_count":364,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation Stay_In_Current_City_Years  \\\n","0  P00069042       0    1          10                          2   \n","1  P00248942       0    1          10                          2   \n","2  P00087842       0    1          10                          2   \n","3  P00085442       0    1          10                          2   \n","4  P00285442       1    7          16                         4+   \n","\n","   Marital_Status  Product_Category_1  Product_Category_2  Product_Category_3  \\\n","0               0                   3                 8.0                16.0   \n","1               0                   1                 6.0                14.0   \n","2               0                  12                 8.0                16.0   \n","3               0                  12                14.0                16.0   \n","4               0                   8                 8.0                16.0   \n","\n","   Purchase      B      C  \n","0    8370.0  False  False  \n","1   15200.0  False  False  \n","2    1422.0  False  False  \n","3    1057.0  False  False  \n","4    7969.0  False   True  "],"text/html":["\n","  <div id=\"df-1440b644-ab55-4216-a8b1-a4b3465d0a57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>8370.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>1422.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>16.0</td>\n","      <td>1057.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>7969.0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1440b644-ab55-4216-a8b1-a4b3465d0a57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1440b644-ab55-4216-a8b1-a4b3465d0a57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1440b644-ab55-4216-a8b1-a4b3465d0a57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-27f072ff-707f-42cc-9d26-614041f8103a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27f072ff-707f-42cc-9d26-614041f8103a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-27f072ff-707f-42cc-9d26-614041f8103a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":364}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WGo7iZ00N0Kd","executionInfo":{"status":"ok","timestamp":1724506543314,"user_tz":-330,"elapsed":22,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"69492bec-d89b-4cb4-edc9-560768c457b7"},"execution_count":365,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(783667, 12)"]},"metadata":{},"execution_count":365}]},{"cell_type":"code","source":["df['Stay_In_Current_City_Years'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AoEPm84NN1q1","executionInfo":{"status":"ok","timestamp":1724506543314,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"d94e3b95-5f50-4c6d-d1d8-8cb0c2fb1b58"},"execution_count":366,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['2', '4+', '3', '1', '0'], dtype=object)"]},"metadata":{},"execution_count":366}]},{"cell_type":"code","source":["df['Stay_In_Current_City_Years']=df['Stay_In_Current_City_Years'].str.replace('+','')"],"metadata":{"id":"lLgvAkeVN4g-","executionInfo":{"status":"ok","timestamp":1724506543967,"user_tz":-330,"elapsed":671,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":367,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"Dy5ZN2mNN6tj","executionInfo":{"status":"ok","timestamp":1724506543968,"user_tz":-330,"elapsed":23,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"379fee23-7c27-4aa9-80d1-081e4b5b9a3e"},"execution_count":368,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation Stay_In_Current_City_Years  \\\n","0  P00069042       0    1          10                          2   \n","1  P00248942       0    1          10                          2   \n","2  P00087842       0    1          10                          2   \n","3  P00085442       0    1          10                          2   \n","4  P00285442       1    7          16                          4   \n","\n","   Marital_Status  Product_Category_1  Product_Category_2  Product_Category_3  \\\n","0               0                   3                 8.0                16.0   \n","1               0                   1                 6.0                14.0   \n","2               0                  12                 8.0                16.0   \n","3               0                  12                14.0                16.0   \n","4               0                   8                 8.0                16.0   \n","\n","   Purchase      B      C  \n","0    8370.0  False  False  \n","1   15200.0  False  False  \n","2    1422.0  False  False  \n","3    1057.0  False  False  \n","4    7969.0  False   True  "],"text/html":["\n","  <div id=\"df-553468d8-654b-4af5-83ed-c5f63e346c7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>8370.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>1422.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>16.0</td>\n","      <td>1057.0</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>7969.0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-553468d8-654b-4af5-83ed-c5f63e346c7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-553468d8-654b-4af5-83ed-c5f63e346c7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-553468d8-654b-4af5-83ed-c5f63e346c7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-352e4944-c80e-4bbe-aefd-b1dd5267f1ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-352e4944-c80e-4bbe-aefd-b1dd5267f1ce')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-352e4944-c80e-4bbe-aefd-b1dd5267f1ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":368}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RxHjZXNrN8Zw","executionInfo":{"status":"ok","timestamp":1724506543968,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"6f1c10f9-b347-44e8-d37f-c66d200208b5"},"execution_count":369,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 783667 entries, 0 to 783666\n","Data columns (total 12 columns):\n"," #   Column                      Non-Null Count   Dtype  \n","---  ------                      --------------   -----  \n"," 0   Product_ID                  783667 non-null  object \n"," 1   Gender                      783667 non-null  int64  \n"," 2   Age                         783667 non-null  int64  \n"," 3   Occupation                  783667 non-null  int64  \n"," 4   Stay_In_Current_City_Years  783667 non-null  object \n"," 5   Marital_Status              783667 non-null  int64  \n"," 6   Product_Category_1          783667 non-null  int64  \n"," 7   Product_Category_2          783667 non-null  float64\n"," 8   Product_Category_3          783667 non-null  float64\n"," 9   Purchase                    550068 non-null  float64\n"," 10  B                           783667 non-null  bool   \n"," 11  C                           783667 non-null  bool   \n","dtypes: bool(2), float64(3), int64(5), object(2)\n","memory usage: 61.3+ MB\n"]}]},{"cell_type":"code","source":["##convert object into integers for Stay_In_Current_City_Years\n","\n","df['Stay_In_Current_City_Years']=df['Stay_In_Current_City_Years'].astype(int)\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nH5oEZ0iN-K0","executionInfo":{"status":"ok","timestamp":1724506544643,"user_tz":-330,"elapsed":690,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"e0c7dfcf-cf82-40b6-b053-51279feeb0bc"},"execution_count":370,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 783667 entries, 0 to 783666\n","Data columns (total 12 columns):\n"," #   Column                      Non-Null Count   Dtype  \n","---  ------                      --------------   -----  \n"," 0   Product_ID                  783667 non-null  object \n"," 1   Gender                      783667 non-null  int64  \n"," 2   Age                         783667 non-null  int64  \n"," 3   Occupation                  783667 non-null  int64  \n"," 4   Stay_In_Current_City_Years  783667 non-null  int64  \n"," 5   Marital_Status              783667 non-null  int64  \n"," 6   Product_Category_1          783667 non-null  int64  \n"," 7   Product_Category_2          783667 non-null  float64\n"," 8   Product_Category_3          783667 non-null  float64\n"," 9   Purchase                    550068 non-null  float64\n"," 10  B                           783667 non-null  bool   \n"," 11  C                           783667 non-null  bool   \n","dtypes: bool(2), float64(3), int64(6), object(1)\n","memory usage: 61.3+ MB\n"]}]},{"cell_type":"code","source":["#convert object into integers\n","\n","df['B']=df['B'].astype(int)\n","df['C']=df['C'].astype(int)"],"metadata":{"id":"Eq8Jgz_UOAru","executionInfo":{"status":"ok","timestamp":1724506544643,"user_tz":-330,"elapsed":7,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":371,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4KEcn-KOOCQh","executionInfo":{"status":"ok","timestamp":1724506544643,"user_tz":-330,"elapsed":6,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"b0edb683-c51a-4220-f4c2-561eda5c0a86"},"execution_count":372,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 783667 entries, 0 to 783666\n","Data columns (total 12 columns):\n"," #   Column                      Non-Null Count   Dtype  \n","---  ------                      --------------   -----  \n"," 0   Product_ID                  783667 non-null  object \n"," 1   Gender                      783667 non-null  int64  \n"," 2   Age                         783667 non-null  int64  \n"," 3   Occupation                  783667 non-null  int64  \n"," 4   Stay_In_Current_City_Years  783667 non-null  int64  \n"," 5   Marital_Status              783667 non-null  int64  \n"," 6   Product_Category_1          783667 non-null  int64  \n"," 7   Product_Category_2          783667 non-null  float64\n"," 8   Product_Category_3          783667 non-null  float64\n"," 9   Purchase                    550068 non-null  float64\n"," 10  B                           783667 non-null  int64  \n"," 11  C                           783667 non-null  int64  \n","dtypes: float64(3), int64(8), object(1)\n","memory usage: 71.7+ MB\n"]}]},{"cell_type":"code","source":["##Visualisation Age vs Purchased\n","\n","sns.barplot(x='Age',y='Purchase',hue='Gender',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"DhLMo6QLOEIR","executionInfo":{"status":"ok","timestamp":1724506551582,"user_tz":-330,"elapsed":6943,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"outputId":"4baa28ac-9c15-4f47-8181-a27506b7fa88"},"execution_count":373,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Age', ylabel='Purchase'>"]},"metadata":{},"execution_count":373},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["observation: Purchasing of men is high then women"],"metadata":{"id":"L0UUG0Him7PV"}},{"cell_type":"code","source":["## Visualization of Purchase with occupation\n","sns.barplot(x='Occupation',y='Purchase',hue='Gender',data=df)"],"metadata":{"id":"sFFYxsqVOGOm","executionInfo":{"status":"ok","timestamp":1724506560047,"user_tz":-330,"elapsed":8490,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":467},"outputId":"d9c5c339-8f0a-4749-cea7-070b3401e227"},"execution_count":374,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Occupation', ylabel='Purchase'>"]},"metadata":{},"execution_count":374},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(x='Product_Category_1',y='Purchase',hue='Gender',data=df)"],"metadata":{"id":"gOQJpQR4OSa4","executionInfo":{"status":"ok","timestamp":1724506566816,"user_tz":-330,"elapsed":6776,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":468},"outputId":"323db4cf-6d83-44b2-d5a6-db0449247fb9"},"execution_count":375,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Product_Category_1', ylabel='Purchase'>"]},"metadata":{},"execution_count":375},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(x='Product_Category_2',y='Purchase',hue='Gender',data=df)"],"metadata":{"id":"je0mi3bhOT7k","executionInfo":{"status":"ok","timestamp":1724506576508,"user_tz":-330,"elapsed":9698,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":468},"outputId":"dafae10b-584e-4709-86d5-95362e5f4fd3"},"execution_count":376,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Product_Category_2', ylabel='Purchase'>"]},"metadata":{},"execution_count":376},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(x='Product_Category_3',y='Purchase',hue='Gender',data=df)"],"metadata":{"id":"P_h-enVLOVnO","executionInfo":{"status":"ok","timestamp":1724506584124,"user_tz":-330,"elapsed":7636,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":468},"outputId":"7f87d43a-263a-49ff-e64b-9e86ed832605"},"execution_count":377,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Product_Category_3', ylabel='Purchase'>"]},"metadata":{},"execution_count":377},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"UUan3UgFOXBI","executionInfo":{"status":"ok","timestamp":1724506584125,"user_tz":-330,"elapsed":20,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":226},"outputId":"1a84bcc8-76ae-4333-aaba-9a3e1a4e4946"},"execution_count":378,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation  Stay_In_Current_City_Years  \\\n","0  P00069042       0    1          10                           2   \n","1  P00248942       0    1          10                           2   \n","2  P00087842       0    1          10                           2   \n","3  P00085442       0    1          10                           2   \n","4  P00285442       1    7          16                           4   \n","\n","   Marital_Status  Product_Category_1  Product_Category_2  Product_Category_3  \\\n","0               0                   3                 8.0                16.0   \n","1               0                   1                 6.0                14.0   \n","2               0                  12                 8.0                16.0   \n","3               0                  12                14.0                16.0   \n","4               0                   8                 8.0                16.0   \n","\n","   Purchase  B  C  \n","0    8370.0  0  0  \n","1   15200.0  0  0  \n","2    1422.0  0  0  \n","3    1057.0  0  0  \n","4    7969.0  0  1  "],"text/html":["\n","  <div id=\"df-8f9414c2-ebb4-4a6e-99bf-ae694877375b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>Purchase</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>8370.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>1422.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>16.0</td>\n","      <td>1057.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>7969.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f9414c2-ebb4-4a6e-99bf-ae694877375b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8f9414c2-ebb4-4a6e-99bf-ae694877375b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8f9414c2-ebb4-4a6e-99bf-ae694877375b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdb0a8bc-a75c-4ebf-9a54-0d560e7d956e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdb0a8bc-a75c-4ebf-9a54-0d560e7d956e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdb0a8bc-a75c-4ebf-9a54-0d560e7d956e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":378}]},{"cell_type":"code","source":["##Feature Scaling\n","df_test=df[df['Purchase'].isnull()]"],"metadata":{"id":"2YBfPtPjOYOO","executionInfo":{"status":"ok","timestamp":1724506584125,"user_tz":-330,"elapsed":16,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":379,"outputs":[]},{"cell_type":"code","source":["df_train=df[~df['Purchase'].isnull()]"],"metadata":{"id":"g_oWQ1GiOZhA","executionInfo":{"status":"ok","timestamp":1724506584126,"user_tz":-330,"elapsed":16,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":380,"outputs":[]},{"cell_type":"code","source":["X=df_train.drop('Purchase',axis=1)"],"metadata":{"id":"iyubNCH7OarF","executionInfo":{"status":"ok","timestamp":1724506584126,"user_tz":-330,"elapsed":16,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":381,"outputs":[]},{"cell_type":"code","source":["X.head()"],"metadata":{"id":"yY2ri7uDOb4e","executionInfo":{"status":"ok","timestamp":1724506585032,"user_tz":-330,"elapsed":921,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":226},"outputId":"d369ffb2-1224-4b72-e7cd-77a4c0c803b1"},"execution_count":382,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Product_ID  Gender  Age  Occupation  Stay_In_Current_City_Years  \\\n","0  P00069042       0    1          10                           2   \n","1  P00248942       0    1          10                           2   \n","2  P00087842       0    1          10                           2   \n","3  P00085442       0    1          10                           2   \n","4  P00285442       1    7          16                           4   \n","\n","   Marital_Status  Product_Category_1  Product_Category_2  Product_Category_3  \\\n","0               0                   3                 8.0                16.0   \n","1               0                   1                 6.0                14.0   \n","2               0                  12                 8.0                16.0   \n","3               0                  12                14.0                16.0   \n","4               0                   8                 8.0                16.0   \n","\n","   B  C  \n","0  0  0  \n","1  0  0  \n","2  0  0  \n","3  0  0  \n","4  0  1  "],"text/html":["\n","  <div id=\"df-019894df-e2dc-4d81-90f2-3cbaee2f4c30\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>Stay_In_Current_City_Years</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category_1</th>\n","      <th>Product_Category_2</th>\n","      <th>Product_Category_3</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>P00248942</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>P00087842</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>P00085442</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>P00285442</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-019894df-e2dc-4d81-90f2-3cbaee2f4c30')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-019894df-e2dc-4d81-90f2-3cbaee2f4c30 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-019894df-e2dc-4d81-90f2-3cbaee2f4c30');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-68da8ad5-9752-4a48-b10b-e2beda74e105\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68da8ad5-9752-4a48-b10b-e2beda74e105')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-68da8ad5-9752-4a48-b10b-e2beda74e105 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X"}},"metadata":{},"execution_count":382}]},{"cell_type":"code","source":["X.shape"],"metadata":{"id":"sN2UhGNeOc34","executionInfo":{"status":"ok","timestamp":1724506585032,"user_tz":-330,"elapsed":31,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c18fbc00-9011-4ebd-a4a5-ca2b9d72f8f1"},"execution_count":383,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(550068, 11)"]},"metadata":{},"execution_count":383}]},{"cell_type":"code","source":["y=df_train['Purchase']"],"metadata":{"id":"uhPFeU41OdzT","executionInfo":{"status":"ok","timestamp":1724506585033,"user_tz":-330,"elapsed":28,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":384,"outputs":[]},{"cell_type":"code","source":["y.shape"],"metadata":{"id":"FVrosFIjOfRi","executionInfo":{"status":"ok","timestamp":1724506585033,"user_tz":-330,"elapsed":27,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"967e782e-e209-40fd-ff13-77452219ef29"},"execution_count":385,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(550068,)"]},"metadata":{},"execution_count":385}]},{"cell_type":"code","source":["y"],"metadata":{"id":"aSTQ3jFZOgWG","executionInfo":{"status":"ok","timestamp":1724506585033,"user_tz":-330,"elapsed":23,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}},"colab":{"base_uri":"https://localhost:8080/","height":458},"outputId":"9ca272a3-9e96-41a8-f543-e5d9f85e6c0c"},"execution_count":386,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          8370.0\n","1         15200.0\n","2          1422.0\n","3          1057.0\n","4          7969.0\n","           ...   \n","550063      368.0\n","550064      371.0\n","550065      137.0\n","550066      365.0\n","550067      490.0\n","Name: Purchase, Length: 550068, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Purchase</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8370.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15200.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1422.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1057.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7969.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>550063</th>\n","      <td>368.0</td>\n","    </tr>\n","    <tr>\n","      <th>550064</th>\n","      <td>371.0</td>\n","    </tr>\n","    <tr>\n","      <th>550065</th>\n","      <td>137.0</td>\n","    </tr>\n","    <tr>\n","      <th>550066</th>\n","      <td>365.0</td>\n","    </tr>\n","    <tr>\n","      <th>550067</th>\n","      <td>490.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>550068 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":386}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","     X, y, test_size=0.33, random_state=42)"],"metadata":{"id":"aIUy_VCMOhx5","executionInfo":{"status":"ok","timestamp":1724506585034,"user_tz":-330,"elapsed":22,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":387,"outputs":[]},{"cell_type":"code","source":["X_train.drop('Product_ID',axis=1,inplace=True)\n","X_test.drop('Product_ID',axis=1,inplace=True)"],"metadata":{"id":"9QQK1Lp0OjUd","executionInfo":{"status":"ok","timestamp":1724506585034,"user_tz":-330,"elapsed":22,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":388,"outputs":[]},{"cell_type":"code","source":["## feature Scaling\n","from sklearn.preprocessing import StandardScaler\n","sc=StandardScaler()\n","X_train=sc.fit_transform(X_train)\n","X_test=sc.transform(X_test)"],"metadata":{"id":"P_o1MV6sOk1u","executionInfo":{"status":"ok","timestamp":1724506585034,"user_tz":-330,"elapsed":21,"user":{"displayName":"vijay rebel","userId":"00325860445228269314"}}},"execution_count":389,"outputs":[]},{"cell_type":"code","source":["## train your model"],"metadata":{"id":"oIy2WfoIqf2N"},"execution_count":null,"outputs":[]}]}